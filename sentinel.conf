#建立此entinel.conf 哨兵配置文件放在redis.windows-service.conf 同级目录下 2019-11-26
daemonize yes
logfile "26379.log"
dir "D:\\Service\\Redis\\master_6379"
bind 127.0.0.1
#当前Sentinel服务运行的端口
port 26379
#master
#Sentinel去监视一个名为mymaster的主redis实例，这个主实例的IP地址为本机地址127.0.0.1，端口号为6379，
#而将这个主实例判断为失效至少需要2个 Sentinel进程的同意，只要同意Sentinel的数量不达标，自动failover就不会执行
sentinel myid 06fadf1ecad3925d850f712cfadd6e2fae686d88
#指定了Sentinel认为Redis实例已经失效所需的毫秒数。当 实例超过该时间没有返回PING，或者直接返回错误，那么Sentinel将这个实例标记为主观下线。
#只有一个 Sentinel进程将实例标记为主观下线并不一定会引起实例的自动故障迁移：只有在足够数量的Sentinel都将一个实例标记为主观下线之后，实例才会被标记为客观下线，这时自动故障迁移才会执行
sentinel monitor mymaster 127.0.0.1 6379 2
#指定了在执行故障转移时，最多可以有多少个从Redis实例在同步新的主实例，在从Redis实例较多的情况下这个数字越小，同步的时间越长，完成故障转移所需的时间就越长
sentinel down-after-milliseconds mymaster 5000
#如果在该时间（ms）内未能完成failover操作，则认为该failover失败
sentinel auth-pass mymaster 123456

sentinel config-epoch mymaster 12
sentinel leader-epoch mymaster 13
sentinel known-slave mymaster 127.0.0.1 6381
# Generated by CONFIG REWRITE
sentinel known-slave mymaster 127.0.0.1 6380
sentinel known-sentinel mymaster 127.0.0.1 26579 5b721b7e974bd2906ea497b8c138508249472292
sentinel known-sentinel mymaster 127.0.0.1 26479 65a8c72d0057b0d0161c31101834a1d0ad11327d
sentinel current-epoch 12
